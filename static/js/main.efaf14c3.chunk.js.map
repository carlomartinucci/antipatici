{"version":3,"sources":["Person.module.css","Header.module.css","Header.js","Person.js","Main.js","utils/generateEnemies.js","App.js","serviceWorker.js","index.js","App.module.css","Main.module.css"],"names":["module","exports","container","id","enemies","enemyId","title","Header","props","react","className","styles","type","min","max","step","value","onChange","setValue","onClick","handleButtonClick","Person","map","key","Main","Object","entries","_ref","_ref2","slicedToArray","castedEnemies","src_Person","generateEnemies","n","result","ids","Array","fill","_","i","forEach","keys","needed","length","availables","filter","otherId","includes","toAdd","a","j","x","Math","floor","random","shuffle","slice","concat","idToAdd","push","App","state","setN","event","_this","setState","parseInt","currentTarget","react_default","createElement","src_Header","this","src_Main","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","root","document","getElementById","ReactDOM","render","src_App","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.efaf14c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Person_container__1xpkB\",\"id\":\"Person_id__3xNAe\",\"enemies\":\"Person_enemies__2dk-X\",\"enemyId\":\"Person_enemyId__1nvTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__3UHQG\",\"title\":\"Header_title__3b14g\"};","// @flow\nimport * as React from 'react';\nimport styles from './Header.module.css';\n\ntype Props = {\n  setValue: (event: SyntheticEvent<HTMLInputElement>) => void,\n  handleButtonClick: () => void,\n  value: ?number\n};\n\nconst Header = (props: Props) =>\n  <header className={styles.container}>\n    <h2 className={styles.title}>\n      Quanti siete?\n    </h2>\n\n    <input type='number' min='0' max='100' step='1' value={props.value} onChange={props.setValue} />\n\n    <button onClick={props.handleButtonClick}>\n      Conferma\n    </button>\n  </header>\n\nexport default Header;\n","// @flow\nimport * as React from 'react';\nimport styles from './Person.module.css';\n\ntype Props = {\n  id: string,\n  enemies: Array<string>\n};\n\nconst Person = (props: Props) =>\n  <div className={styles.container}>\n    <div className={styles.id}>{props.id}</div>\n    <div className={styles.enemies}>\n      {props.enemies.map(id => <div key={id} className={styles.enemyId}>{id}</div>)}\n    </div>\n  </div>\n\nexport default Person;\n","// @flow\nimport * as React from 'react';\nimport styles from './Main.module.css';\nimport Person from './Person';\n\ntype Props = {\n  enemies: {[id: string]: Array<string>}\n};\n\nconst Main = (props: Props) =>\n  <main className={styles.container}>\n    {Object.entries(props.enemies).map(([id, enemies]) => {\n      const castedEnemies: Array<string> = (enemies: any)\n      return <Person key={id} id={id} enemies={castedEnemies}/>\n    })}\n  </main>\n\nexport default Main;\n","// @flow\n\n/**\n * Shuffles array in place.\n * @param {Array} a items An array containing the items.\n */\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n}\n\nconst generateEnemies = (n: number) => {\n  if(!n) return {}\n\n  const result = {}\n  const ids = Array(n).fill(null).map((_,i) => '' + (i + 1))\n  ids.forEach(id => result[id] = [])\n  Object.keys(result).forEach(id => {\n    const enemies = result[id]\n    const needed = 3 - enemies.length\n    let availables = ids.filter(otherId =>\n      id !== otherId &&\n      !enemies.includes(otherId) &&\n      result[otherId].length < 3\n    )\n    if (needed > 0 && availables.length > 0) {\n      const toAdd = shuffle(availables).slice(0, needed)\n      result[id] = result[id].concat(toAdd)\n      toAdd.forEach(idToAdd => result[idToAdd].push(id))\n    }\n  })\n\n  return result\n}\n\n\nexport default generateEnemies\n","// @flow\nimport React, { Component } from 'react';\nimport styles from './App.module.css';\n\nimport Header from './Header';\nimport Main from './Main';\nimport generateEnemies from './utils/generateEnemies';\n\ntype State = {\n  n: number,\n  enemies: {}\n};\n\nclass App extends Component<{}, State> {\n  state = {\n    n: 20,\n    enemies: {}\n  }\n  setN = (event: SyntheticEvent<HTMLInputElement>) => this.setState({ n: parseInt(event.currentTarget.value) })\n  generateEnemies = () => this.setState(state => ({ enemies: generateEnemies(state.n) }))\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <Header setValue={this.setN} value={this.state.n} handleButtonClick={this.generateEnemies} />\n\n        <Main enemies={this.state.enemies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root')\n\nif (root)\n  ReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2_jhJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__1AR-9\"};"],"sourceRoot":""}